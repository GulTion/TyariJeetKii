{"path":"Samsung RandD/media/Given Away.pdf","text":"HackerRank | Prepare Certify Compete Apply Search   1  All Contests SRBD Code Contest - 2024 (Round 2) Given Away  Given Away locked Problem Submissions Discussions Time Limit ++ Memory Limit Your friend encountered this challenging problem and found it really annoying. But since you love problem solving so much, he gave it away to you. Let's see if trying it actually gets you any serotonin. There is a grid with rows and columns. Each cell is either empty (denoted by '.') or blocked with a wall (denoted by 'x'). Two empty cells are directly connected if they share a side. Two cells (located in the row and column ) and are connected if there exists a sequence of empty cells that starts with , ﬁnishes with , and any two consecutive cells in this sequence are directly connected. A connected component is a set of empty cells such that any two cells in the component are connected, and there is no cell in this set that is connected to some cell not in this set. You can do at most one operation on this grid. Choose a row, column or diagonal line (see sample explanation) of the grid and turn every cell in the selected row, column or diagonal line to a wall. The objective is to have as many connected components as possible in the ﬁnal grid. Input Format The ﬁrst line contains a single integer — the number of test cases. Then follow test cases. The ﬁrst line of each test contains two integers and — the size of the grid. Each of the next lines contains a string with characters, denoting the -th row of the grid. Each character is '.' or 'x', denoting an empty cell or a blocked one, respectively. Constraints Sum of over all testcases does not exceed Output Format Print the maximum possible count of connected components in the ﬁnal resulting grid after using at most one operation. Sample Input 0 4 3 3 ... xxx ... 4 5 x..x. ...x. ..x.. xxx.x 1 1 . 2 3  ... x.. Sample Output 0 4 5 1 3 Explanation 0 1st test case: Using the operation on the 2nd column will result in 4 separate connected components in the 4 corners of the grid. 2nd test case: A diagonal operation can make a grid like the following, where the 'o' symbol respresents the new wall blocks created: 3rd test case: There is only one cell, so at most 1 connected component is possible. 4th test case: A diagonal operation can make a grid like the following, where the 'o' symbol respresents the new wall blocks created: Submissions: 7 Max Score: 100 Rate This Challenge: More         Test against custom input  ⚙C  Line: 1 Col: 1 Run Code Submit CodeUpload Code as File #include <stdio.h> #include <string.h> #include <math.h> #include <stdlib.h> int main() {    /* Enter your code here. Read input from STDIN. Print output to STDOUT */        return 0; } 1 ▾ 23456 ▾ 78 ▾ 9 1 0 Interview Prep | Blog | Scoring | Environment | FAQ | About Us | Support | Careers | Terms Of Service | Privacy Policy |","libVersion":"0.3.2","langs":""}