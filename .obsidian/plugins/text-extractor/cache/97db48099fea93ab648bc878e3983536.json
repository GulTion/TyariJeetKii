{"path":"Samsung RandD/media/Damaged Tags.pdf","text":"HackerRank | Prepare Certify Compete Apply Search   1  All Contests SRBD Code Contest - 2024 (Round 2) Damaged Tags  Damaged Tags locked Problem Submissions Discussions Time Limit: ++ Memory Limit: The FRBD(Fun Research & Development) is going to arr ange a big e vent coming up. For this e vent, the management purchased several of Samsung' s latest Smart de vices. Each of these de vices has a unique long-digit identiﬁer in the de vice tags. Ther e is a client app where those smart devices can be r egister ed and used. When a device is booted up and placed into pairing mode, it appears in the nearby devices list within the app, displaying the last 4 digits of its unique identiﬁer for identiﬁcation purposes. For the setup, all of the ne wly pur chased devices have been turned on and placed into pairing mode simultaneously . The client app now shows the list of 4-digit identiﬁers of all nearb y devices(r eady to be pair ed) including all ne wly pur chased devices and old devices which ar e in pairing mode. So, the nearb y list can be much lar ger than purchased devices list. As the identiﬁers ar e showing, so anyone can easily select their ne wly pur chased devices fr om the nearby list b y matching identiﬁers. Problem begins when management ﬁnd most of the de vices tags ar e damaged somehow. Some identiﬁers ar e visible partially . Each purchased device ’s identiﬁer (as sho wn in the app) is r epresented by a 4-char acter string, which contain: Digits (0-9) representing speciﬁc positions in the identiﬁer. Wildcards (?) representing damaged digits that can match any digit (0-9) in the corr esponding position. A purchased device with wildcar ds can match multiple nearb y devices. For e xample, the identiﬁer can match both and . It is also possible for a fully visible identiﬁer fr om purchased devices list to be matched with multiple identiﬁers fr om nearby devices list, as app is sho wing only last 4-digit of the identiﬁers. No w the management wants to determine ho w many distinct matching sets can be formed between pur chased and nearby devices, subject to the follo wing constr aints: Each purchased device must match exactly one nearby device. A nearby device can match atmost one purchased device in a set. All pur chased devices must be included in each set. (see sample e xplanation for better understandings) Management needs your help to ﬁnd the total number of valid sets. Input Format The ﬁrst line contains an integer denoting the number of test cases. Every test case starts with a integer denoting the number of pur chased devices. Each of the next lines contain a 4-length string denoting each of pur chased device 's identiﬁer. Each string will consists of either '?' or '0'-'9'(digits) or combination of both. Next line contains another integer denoting the number of nearb y devices. Each of next lines contain a 4-length string denoting each nearb y devices' s identiﬁer. Each string will consist of '0'-'9'(digits). Constraints  Use Faster I/O Methods. Output Format For each test case, you need to print the number of distinct pur chased device sets matched fr om nearby devices list. As the number can be very lar ge, print it with modulo 1000000007( + 7). Sample Input 0 1 2 ?7?? ???2 5 5607 2742 8754 4724 8672 Sample Output 0 5 Explanation 0 Here, 2742, 8754 and 4724 fr om nearby devices list can be chosen in case of ?7?? pur chased device and 2742, 8672 fr om nearby devices list can be chosen in case of ???2 pur chased device. Distinct matching sets will be {2742, 8672}, {8754, 2742}, {8754, 8672}, {4724, 2742} and {4724, 8672}. So, The number of distinct sets will be 5. Submissions: 157 Max Score: 100 Rate This Challenge: More         Test against custom input  ⚙C  Line: 1 Col: 1 Run Code Submit CodeUpload Code as File #include <stdio.h> #include <string.h> #include <math.h> #include <stdlib.h> int main() {    /* Enter your code here. Read input from STDIN. Print output to STDOUT */        return 0; } 1 ▾ 23456 ▾ 78 ▾ 9 1 0 Interview Prep | Blog | Scoring | Environment | FAQ | About Us | Support | Careers | Terms Of Service | Privacy Policy |","libVersion":"0.3.2","langs":""}