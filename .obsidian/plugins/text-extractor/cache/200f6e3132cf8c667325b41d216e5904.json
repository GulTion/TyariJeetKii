{"path":"Samsung RandD/media/Fun Fishing.pdf","text":"HackerRank | Prepare Certify Compete Apply Search   1  All Contests SRBD Code Contest - 2023 (Round 2) Fun Fishing  Fun Fishing locked Problem Submissions Time Limit: ++ Memory Limit: There is an x grid representing a pond. Each cell of the pond may contain some ﬁsh. The amount of ﬁsh in each cell is represented by the number written in the cell. At ﬁrst, you need a ﬁshing net to catch ﬁsh in the pond. A ﬁshing net is a square in shape. The size of the net is equivalent to the length of the square's side. Secondly, when you throw the ﬁshing net in the pond, you have to throw it diagonally. The diagonals of the square should be parallel to the Horizontal and Vertical axis. Also, you need to throw the net in a way that no portion of it goes outside the pond area. The above picture shows three diﬀerent-sized ( : Red, : Green, : Blue) ﬁshing nets thrown in the pond. After you determine the size of the ﬁshing net, your next task is to determine where in the pond you should throw it. You have only one chance to throw it, so try to catch the maximum ﬁsh possible. If you are free to choose any size of ﬁshing net, by following all the rules above, what is the maximum amount of ﬁsh you can catch by throwing it once? Input Format Input starts with two integers and , denoting the size of the pond. Each of the next lines contains space-separated integers. The number of the line denotes the amount of ﬁsh in that cell. Constraints Output Format Print the maximum amount of ﬁsh you can catch. Sample Input 0  Interview Prep | Blog | Scoring | Environment | FAQ | About Us | Support | Careers | Terms Of Service | Privacy Policy | 4 3 1 2 3 1 2 3 1 2 3 1 2 3 Sample Output 0 10 Explanation 0 Submissions: 38 Max Score: 1 Rate This Challenge: More         Test against custom input  ⚙C  Line: 1 Col: 1 Run Code Submit CodeUpload Code as File #include <stdio.h> #include <string.h> #include <math.h> #include <stdlib.h> int main() {    /* Enter your code here. Read input from STDIN. Print output to STDOUT */        return 0; } 1 ▾ 23456 ▾ 78 ▾ 9 1 0 1 1","libVersion":"0.3.2","langs":""}