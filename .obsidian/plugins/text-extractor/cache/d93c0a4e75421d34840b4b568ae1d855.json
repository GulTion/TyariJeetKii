{"path":"Samsung RandD/media/Colorful Tree.pdf","text":"HackerRank | Prepare Certify Compete Apply Search   1  All Contests SRBD Code Contest - 2023 (Round 1) Colorful Tree  Colorful Tree locked Problem Submissions Time Limit ++ Memory Limit You are given an undirected rooted tree with nodes where each node has color . You are also given a binary string of length consisting of only and . The color of node in the tree is determined as follows: if , then if , then where is the parent node of The root of the tree is node and it is guaranteed that You need to answer queries of the following type: Given nodes and , answer how many unique colors are on the simple path between them. A simple path is a path that visits each vertex at most once. Also ﬁnd the deﬁnition of a rooted tree here. Input Format The ﬁrst line of input contains an integer denoting the number of test cases. Then testcases follow. The ﬁrst line of each test case contains two integers and — the number of nodes and the number of queries. The second line contains integers where the integer denotes the parent of node . The third line contains a binary string of length consisting of only and . Then lines follow each describing a query with two integers and . Constraints Sum of and over all testcases do not exceed Output Format For each testcase print integers, the answer to the queries in separate lines. Sample Input 0 2 3 1 1 1 110 2 3 5 3 1 1 2 2 10101 2 2  Interview Prep | Blog | Scoring | Environment | FAQ | About Us | Support | Careers | Terms Of Service | Privacy Policy | 4 5 5 3 Sample Output 0 2 1 2 3 Explanation 0 The trees from sample testcases. Color of each node is marked underlined near it. Submissions: 77 Max Score: 1 Rate This Challenge: More         Test against custom input  ⚙C  Line: 1 Col: 1 Run Code Submit CodeUpload Code as File #include <math.h> #include <stdio.h> #include <string.h> #include <stdlib.h> #include <assert.h> #include <limits.h> #include <stdbool.h> int main() {    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    return 0; } 1 ▾ 23456789 ▾ 1 0 ▾ 1 1 1 2","libVersion":"0.3.2","langs":""}